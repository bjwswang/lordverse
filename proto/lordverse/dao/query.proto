syntax = "proto3";

package lordverse.dao;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "lordverse/dao/params.proto";
import "lordverse/dao/warehouse.proto";
import "lordverse/dao/vote.proto";
import "lordverse/dao/proposal.proto";
import "lordverse/dao/voter.proto";

option go_package = "lordverse/x/dao/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/lordverse/dao/params";
  
  }
  
  // Queries a list of Warehouse items.
  rpc Warehouse    (QueryGetWarehouseRequest) returns (QueryGetWarehouseResponse) {
    option (google.api.http).get = "/lordverse/dao/warehouse/{id}";
  
  }
  rpc WarehouseAll (QueryAllWarehouseRequest) returns (QueryAllWarehouseResponse) {
    option (google.api.http).get = "/lordverse/dao/warehouse";
  
  }
  
  // Queries a list of Vote items.
  rpc Vote    (QueryGetVoteRequest) returns (QueryGetVoteResponse) {
    option (google.api.http).get = "/lordverse/dao/vote/{id}";
  
  }
  rpc VoteAll (QueryAllVoteRequest) returns (QueryAllVoteResponse) {
    option (google.api.http).get = "/lordverse/dao/vote";
  
  }
  
  // Queries a list of Proposal items.
  rpc Proposal    (QueryGetProposalRequest) returns (QueryGetProposalResponse) {
    option (google.api.http).get = "/lordverse/dao/proposal/{id}";
  
  }
  rpc ProposalAll (QueryAllProposalRequest) returns (QueryAllProposalResponse) {
    option (google.api.http).get = "/lordverse/dao/proposal";
  
  }
  
  // Queries a list of Voter items.
  rpc Voter    (QueryGetVoterRequest) returns (QueryGetVoterResponse) {
    option (google.api.http).get = "/lordverse/dao/voter/{id}";
  
  }
  rpc VoterAll (QueryAllVoterRequest) returns (QueryAllVoterResponse) {
    option (google.api.http).get = "/lordverse/dao/voter";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetWarehouseRequest {
  uint64 id = 1;
}

message QueryGetWarehouseResponse {
  Warehouse Warehouse = 1 [(gogoproto.nullable) = false];
}

message QueryAllWarehouseRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllWarehouseResponse {
  repeated Warehouse                              Warehouse  = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetVoteRequest {
  uint64 id = 1;
}

message QueryGetVoteResponse {
  Vote Vote = 1 [(gogoproto.nullable) = false];
}

message QueryAllVoteRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllVoteResponse {
  repeated Vote                                   Vote       = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetProposalRequest {
  uint64 id = 1;
}

message QueryGetProposalResponse {
  Proposal Proposal = 1 [(gogoproto.nullable) = false];
}

message QueryAllProposalRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllProposalResponse {
  repeated Proposal                               Proposal   = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetVoterRequest {
  uint64 id = 1;
}

message QueryGetVoterResponse {
  Voter Voter = 1 [(gogoproto.nullable) = false];
}

message QueryAllVoterRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllVoterResponse {
  repeated Voter                                  Voter      = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

