// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lordverse/dao/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_cosmos_gogoproto_types "github.com/cosmos/gogoproto/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateWarehouse struct {
	Creator   string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Voters    []uint64 `protobuf:"varint,2,rep,packed,name=voters,proto3" json:"voters,omitempty"`
	Threshold uint64   `protobuf:"varint,3,opt,name=threshold,proto3" json:"threshold,omitempty"`
}

func (m *MsgCreateWarehouse) Reset()         { *m = MsgCreateWarehouse{} }
func (m *MsgCreateWarehouse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateWarehouse) ProtoMessage()    {}
func (*MsgCreateWarehouse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7242c276d1c9996, []int{0}
}
func (m *MsgCreateWarehouse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateWarehouse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateWarehouse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateWarehouse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateWarehouse.Merge(m, src)
}
func (m *MsgCreateWarehouse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateWarehouse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateWarehouse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateWarehouse proto.InternalMessageInfo

func (m *MsgCreateWarehouse) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateWarehouse) GetVoters() []uint64 {
	if m != nil {
		return m.Voters
	}
	return nil
}

func (m *MsgCreateWarehouse) GetThreshold() uint64 {
	if m != nil {
		return m.Threshold
	}
	return 0
}

type MsgCreateWarehouseResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateWarehouseResponse) Reset()         { *m = MsgCreateWarehouseResponse{} }
func (m *MsgCreateWarehouseResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateWarehouseResponse) ProtoMessage()    {}
func (*MsgCreateWarehouseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7242c276d1c9996, []int{1}
}
func (m *MsgCreateWarehouseResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateWarehouseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateWarehouseResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateWarehouseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateWarehouseResponse.Merge(m, src)
}
func (m *MsgCreateWarehouseResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateWarehouseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateWarehouseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateWarehouseResponse proto.InternalMessageInfo

func (m *MsgCreateWarehouseResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgSignWarehouse struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// voter id.
	Voter uint64 `protobuf:"varint,2,opt,name=voter,proto3" json:"voter,omitempty"`
	// id of the warehouse.
	Id uint64 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgSignWarehouse) Reset()         { *m = MsgSignWarehouse{} }
func (m *MsgSignWarehouse) String() string { return proto.CompactTextString(m) }
func (*MsgSignWarehouse) ProtoMessage()    {}
func (*MsgSignWarehouse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7242c276d1c9996, []int{2}
}
func (m *MsgSignWarehouse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSignWarehouse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSignWarehouse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSignWarehouse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSignWarehouse.Merge(m, src)
}
func (m *MsgSignWarehouse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSignWarehouse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSignWarehouse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSignWarehouse proto.InternalMessageInfo

func (m *MsgSignWarehouse) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSignWarehouse) GetVoter() uint64 {
	if m != nil {
		return m.Voter
	}
	return 0
}

func (m *MsgSignWarehouse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgSignWarehouseResponse struct {
	SignedVoters map[uint64]bool `protobuf:"bytes,1,rep,name=signedVoters,proto3" json:"signedVoters,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (m *MsgSignWarehouseResponse) Reset()         { *m = MsgSignWarehouseResponse{} }
func (m *MsgSignWarehouseResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSignWarehouseResponse) ProtoMessage()    {}
func (*MsgSignWarehouseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7242c276d1c9996, []int{3}
}
func (m *MsgSignWarehouseResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSignWarehouseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSignWarehouseResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSignWarehouseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSignWarehouseResponse.Merge(m, src)
}
func (m *MsgSignWarehouseResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSignWarehouseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSignWarehouseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSignWarehouseResponse proto.InternalMessageInfo

func (m *MsgSignWarehouseResponse) GetSignedVoters() map[uint64]bool {
	if m != nil {
		return m.SignedVoters
	}
	return nil
}

type MsgUpdateWarehouse struct {
	Creator   string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id        uint64   `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Voters    []uint64 `protobuf:"varint,3,rep,packed,name=voters,proto3" json:"voters,omitempty"`
	Threshold uint64   `protobuf:"varint,4,opt,name=threshold,proto3" json:"threshold,omitempty"`
}

func (m *MsgUpdateWarehouse) Reset()         { *m = MsgUpdateWarehouse{} }
func (m *MsgUpdateWarehouse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateWarehouse) ProtoMessage()    {}
func (*MsgUpdateWarehouse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7242c276d1c9996, []int{4}
}
func (m *MsgUpdateWarehouse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateWarehouse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateWarehouse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateWarehouse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateWarehouse.Merge(m, src)
}
func (m *MsgUpdateWarehouse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateWarehouse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateWarehouse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateWarehouse proto.InternalMessageInfo

func (m *MsgUpdateWarehouse) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateWarehouse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateWarehouse) GetVoters() []uint64 {
	if m != nil {
		return m.Voters
	}
	return nil
}

func (m *MsgUpdateWarehouse) GetThreshold() uint64 {
	if m != nil {
		return m.Threshold
	}
	return 0
}

type MsgUpdateWarehouseResponse struct {
}

func (m *MsgUpdateWarehouseResponse) Reset()         { *m = MsgUpdateWarehouseResponse{} }
func (m *MsgUpdateWarehouseResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateWarehouseResponse) ProtoMessage()    {}
func (*MsgUpdateWarehouseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7242c276d1c9996, []int{5}
}
func (m *MsgUpdateWarehouseResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateWarehouseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateWarehouseResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateWarehouseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateWarehouseResponse.Merge(m, src)
}
func (m *MsgUpdateWarehouseResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateWarehouseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateWarehouseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateWarehouseResponse proto.InternalMessageInfo

type MsgDeleteWarehouse struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteWarehouse) Reset()         { *m = MsgDeleteWarehouse{} }
func (m *MsgDeleteWarehouse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteWarehouse) ProtoMessage()    {}
func (*MsgDeleteWarehouse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7242c276d1c9996, []int{6}
}
func (m *MsgDeleteWarehouse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteWarehouse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteWarehouse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteWarehouse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteWarehouse.Merge(m, src)
}
func (m *MsgDeleteWarehouse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteWarehouse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteWarehouse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteWarehouse proto.InternalMessageInfo

func (m *MsgDeleteWarehouse) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteWarehouse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteWarehouseResponse struct {
}

func (m *MsgDeleteWarehouseResponse) Reset()         { *m = MsgDeleteWarehouseResponse{} }
func (m *MsgDeleteWarehouseResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteWarehouseResponse) ProtoMessage()    {}
func (*MsgDeleteWarehouseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7242c276d1c9996, []int{7}
}
func (m *MsgDeleteWarehouseResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteWarehouseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteWarehouseResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteWarehouseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteWarehouseResponse.Merge(m, src)
}
func (m *MsgDeleteWarehouseResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteWarehouseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteWarehouseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteWarehouseResponse proto.InternalMessageInfo

type MsgCreateProposal struct {
	Creator     string     `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Title       string     `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string     `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Expiration  *time.Time `protobuf:"bytes,4,opt,name=expiration,proto3,stdtime" json:"expiration,omitempty"`
	// id of the warehouse
	Warehouse uint64 `protobuf:"varint,5,opt,name=warehouse,proto3" json:"warehouse,omitempty"`
}

func (m *MsgCreateProposal) Reset()         { *m = MsgCreateProposal{} }
func (m *MsgCreateProposal) String() string { return proto.CompactTextString(m) }
func (*MsgCreateProposal) ProtoMessage()    {}
func (*MsgCreateProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7242c276d1c9996, []int{8}
}
func (m *MsgCreateProposal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateProposal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateProposal.Merge(m, src)
}
func (m *MsgCreateProposal) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateProposal.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateProposal proto.InternalMessageInfo

func (m *MsgCreateProposal) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateProposal) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MsgCreateProposal) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MsgCreateProposal) GetExpiration() *time.Time {
	if m != nil {
		return m.Expiration
	}
	return nil
}

func (m *MsgCreateProposal) GetWarehouse() uint64 {
	if m != nil {
		return m.Warehouse
	}
	return 0
}

type MsgCreateProposalResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateProposalResponse) Reset()         { *m = MsgCreateProposalResponse{} }
func (m *MsgCreateProposalResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateProposalResponse) ProtoMessage()    {}
func (*MsgCreateProposalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7242c276d1c9996, []int{9}
}
func (m *MsgCreateProposalResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateProposalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateProposalResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateProposalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateProposalResponse.Merge(m, src)
}
func (m *MsgCreateProposalResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateProposalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateProposalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateProposalResponse proto.InternalMessageInfo

func (m *MsgCreateProposalResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateProposal struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id          uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (m *MsgUpdateProposal) Reset()         { *m = MsgUpdateProposal{} }
func (m *MsgUpdateProposal) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateProposal) ProtoMessage()    {}
func (*MsgUpdateProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7242c276d1c9996, []int{10}
}
func (m *MsgUpdateProposal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateProposal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateProposal.Merge(m, src)
}
func (m *MsgUpdateProposal) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateProposal.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateProposal proto.InternalMessageInfo

func (m *MsgUpdateProposal) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateProposal) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateProposal) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type MsgUpdateProposalResponse struct {
}

func (m *MsgUpdateProposalResponse) Reset()         { *m = MsgUpdateProposalResponse{} }
func (m *MsgUpdateProposalResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateProposalResponse) ProtoMessage()    {}
func (*MsgUpdateProposalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7242c276d1c9996, []int{11}
}
func (m *MsgUpdateProposalResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateProposalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateProposalResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateProposalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateProposalResponse.Merge(m, src)
}
func (m *MsgUpdateProposalResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateProposalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateProposalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateProposalResponse proto.InternalMessageInfo

type MsgDeleteProposal struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteProposal) Reset()         { *m = MsgDeleteProposal{} }
func (m *MsgDeleteProposal) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteProposal) ProtoMessage()    {}
func (*MsgDeleteProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7242c276d1c9996, []int{12}
}
func (m *MsgDeleteProposal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteProposal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteProposal.Merge(m, src)
}
func (m *MsgDeleteProposal) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteProposal.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteProposal proto.InternalMessageInfo

func (m *MsgDeleteProposal) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteProposal) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteProposalResponse struct {
}

func (m *MsgDeleteProposalResponse) Reset()         { *m = MsgDeleteProposalResponse{} }
func (m *MsgDeleteProposalResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteProposalResponse) ProtoMessage()    {}
func (*MsgDeleteProposalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7242c276d1c9996, []int{13}
}
func (m *MsgDeleteProposalResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteProposalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteProposalResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteProposalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteProposalResponse.Merge(m, src)
}
func (m *MsgDeleteProposalResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteProposalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteProposalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteProposalResponse proto.InternalMessageInfo

type MsgExecuteProposal struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgExecuteProposal) Reset()         { *m = MsgExecuteProposal{} }
func (m *MsgExecuteProposal) String() string { return proto.CompactTextString(m) }
func (*MsgExecuteProposal) ProtoMessage()    {}
func (*MsgExecuteProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7242c276d1c9996, []int{14}
}
func (m *MsgExecuteProposal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgExecuteProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgExecuteProposal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgExecuteProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgExecuteProposal.Merge(m, src)
}
func (m *MsgExecuteProposal) XXX_Size() int {
	return m.Size()
}
func (m *MsgExecuteProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgExecuteProposal.DiscardUnknown(m)
}

var xxx_messageInfo_MsgExecuteProposal proto.InternalMessageInfo

func (m *MsgExecuteProposal) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgExecuteProposal) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgExecuteProposalResponse struct {
}

func (m *MsgExecuteProposalResponse) Reset()         { *m = MsgExecuteProposalResponse{} }
func (m *MsgExecuteProposalResponse) String() string { return proto.CompactTextString(m) }
func (*MsgExecuteProposalResponse) ProtoMessage()    {}
func (*MsgExecuteProposalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7242c276d1c9996, []int{15}
}
func (m *MsgExecuteProposalResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgExecuteProposalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgExecuteProposalResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgExecuteProposalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgExecuteProposalResponse.Merge(m, src)
}
func (m *MsgExecuteProposalResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgExecuteProposalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgExecuteProposalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgExecuteProposalResponse proto.InternalMessageInfo

type MsgCreateVoter struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Weight  uint64 `protobuf:"varint,3,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (m *MsgCreateVoter) Reset()         { *m = MsgCreateVoter{} }
func (m *MsgCreateVoter) String() string { return proto.CompactTextString(m) }
func (*MsgCreateVoter) ProtoMessage()    {}
func (*MsgCreateVoter) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7242c276d1c9996, []int{16}
}
func (m *MsgCreateVoter) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateVoter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateVoter.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateVoter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateVoter.Merge(m, src)
}
func (m *MsgCreateVoter) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateVoter) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateVoter.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateVoter proto.InternalMessageInfo

func (m *MsgCreateVoter) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateVoter) GetWeight() uint64 {
	if m != nil {
		return m.Weight
	}
	return 0
}

type MsgCreateVoterResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateVoterResponse) Reset()         { *m = MsgCreateVoterResponse{} }
func (m *MsgCreateVoterResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateVoterResponse) ProtoMessage()    {}
func (*MsgCreateVoterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7242c276d1c9996, []int{17}
}
func (m *MsgCreateVoterResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateVoterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateVoterResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateVoterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateVoterResponse.Merge(m, src)
}
func (m *MsgCreateVoterResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateVoterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateVoterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateVoterResponse proto.InternalMessageInfo

func (m *MsgCreateVoterResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateVoter struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Weight  uint64 `protobuf:"varint,3,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (m *MsgUpdateVoter) Reset()         { *m = MsgUpdateVoter{} }
func (m *MsgUpdateVoter) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateVoter) ProtoMessage()    {}
func (*MsgUpdateVoter) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7242c276d1c9996, []int{18}
}
func (m *MsgUpdateVoter) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateVoter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateVoter.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateVoter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateVoter.Merge(m, src)
}
func (m *MsgUpdateVoter) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateVoter) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateVoter.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateVoter proto.InternalMessageInfo

func (m *MsgUpdateVoter) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateVoter) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateVoter) GetWeight() uint64 {
	if m != nil {
		return m.Weight
	}
	return 0
}

type MsgUpdateVoterResponse struct {
}

func (m *MsgUpdateVoterResponse) Reset()         { *m = MsgUpdateVoterResponse{} }
func (m *MsgUpdateVoterResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateVoterResponse) ProtoMessage()    {}
func (*MsgUpdateVoterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7242c276d1c9996, []int{19}
}
func (m *MsgUpdateVoterResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateVoterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateVoterResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateVoterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateVoterResponse.Merge(m, src)
}
func (m *MsgUpdateVoterResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateVoterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateVoterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateVoterResponse proto.InternalMessageInfo

type MsgDeleteVoter struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteVoter) Reset()         { *m = MsgDeleteVoter{} }
func (m *MsgDeleteVoter) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteVoter) ProtoMessage()    {}
func (*MsgDeleteVoter) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7242c276d1c9996, []int{20}
}
func (m *MsgDeleteVoter) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteVoter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteVoter.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteVoter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteVoter.Merge(m, src)
}
func (m *MsgDeleteVoter) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteVoter) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteVoter.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteVoter proto.InternalMessageInfo

func (m *MsgDeleteVoter) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteVoter) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteVoterResponse struct {
}

func (m *MsgDeleteVoterResponse) Reset()         { *m = MsgDeleteVoterResponse{} }
func (m *MsgDeleteVoterResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteVoterResponse) ProtoMessage()    {}
func (*MsgDeleteVoterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7242c276d1c9996, []int{21}
}
func (m *MsgDeleteVoterResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteVoterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteVoterResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteVoterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteVoterResponse.Merge(m, src)
}
func (m *MsgDeleteVoterResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteVoterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteVoterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteVoterResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateWarehouse)(nil), "lordverse.dao.MsgCreateWarehouse")
	proto.RegisterType((*MsgCreateWarehouseResponse)(nil), "lordverse.dao.MsgCreateWarehouseResponse")
	proto.RegisterType((*MsgSignWarehouse)(nil), "lordverse.dao.MsgSignWarehouse")
	proto.RegisterType((*MsgSignWarehouseResponse)(nil), "lordverse.dao.MsgSignWarehouseResponse")
	proto.RegisterMapType((map[uint64]bool)(nil), "lordverse.dao.MsgSignWarehouseResponse.SignedVotersEntry")
	proto.RegisterType((*MsgUpdateWarehouse)(nil), "lordverse.dao.MsgUpdateWarehouse")
	proto.RegisterType((*MsgUpdateWarehouseResponse)(nil), "lordverse.dao.MsgUpdateWarehouseResponse")
	proto.RegisterType((*MsgDeleteWarehouse)(nil), "lordverse.dao.MsgDeleteWarehouse")
	proto.RegisterType((*MsgDeleteWarehouseResponse)(nil), "lordverse.dao.MsgDeleteWarehouseResponse")
	proto.RegisterType((*MsgCreateProposal)(nil), "lordverse.dao.MsgCreateProposal")
	proto.RegisterType((*MsgCreateProposalResponse)(nil), "lordverse.dao.MsgCreateProposalResponse")
	proto.RegisterType((*MsgUpdateProposal)(nil), "lordverse.dao.MsgUpdateProposal")
	proto.RegisterType((*MsgUpdateProposalResponse)(nil), "lordverse.dao.MsgUpdateProposalResponse")
	proto.RegisterType((*MsgDeleteProposal)(nil), "lordverse.dao.MsgDeleteProposal")
	proto.RegisterType((*MsgDeleteProposalResponse)(nil), "lordverse.dao.MsgDeleteProposalResponse")
	proto.RegisterType((*MsgExecuteProposal)(nil), "lordverse.dao.MsgExecuteProposal")
	proto.RegisterType((*MsgExecuteProposalResponse)(nil), "lordverse.dao.MsgExecuteProposalResponse")
	proto.RegisterType((*MsgCreateVoter)(nil), "lordverse.dao.MsgCreateVoter")
	proto.RegisterType((*MsgCreateVoterResponse)(nil), "lordverse.dao.MsgCreateVoterResponse")
	proto.RegisterType((*MsgUpdateVoter)(nil), "lordverse.dao.MsgUpdateVoter")
	proto.RegisterType((*MsgUpdateVoterResponse)(nil), "lordverse.dao.MsgUpdateVoterResponse")
	proto.RegisterType((*MsgDeleteVoter)(nil), "lordverse.dao.MsgDeleteVoter")
	proto.RegisterType((*MsgDeleteVoterResponse)(nil), "lordverse.dao.MsgDeleteVoterResponse")
}

func init() { proto.RegisterFile("lordverse/dao/tx.proto", fileDescriptor_a7242c276d1c9996) }

var fileDescriptor_a7242c276d1c9996 = []byte{
	// 783 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0x5d, 0x4f, 0xd4, 0x40,
	0x14, 0xa5, 0xdb, 0x05, 0xdc, 0xbb, 0xb2, 0x42, 0x83, 0xa4, 0x54, 0x58, 0x4a, 0x13, 0xe3, 0x1a,
	0x4d, 0x37, 0xc1, 0x17, 0x25, 0xf1, 0x23, 0x28, 0x8f, 0x24, 0xa6, 0xeb, 0x47, 0x34, 0x1a, 0x52,
	0xe8, 0xd8, 0x6d, 0x2c, 0x3b, 0x4d, 0xa7, 0x0b, 0xcb, 0xbf, 0xe0, 0xf7, 0xf8, 0x6e, 0xe2, 0x23,
	0x8f, 0xbe, 0x69, 0xe0, 0x77, 0x98, 0x98, 0xce, 0xb4, 0x43, 0x3b, 0xdb, 0x76, 0x17, 0xde, 0x3a,
	0x33, 0x77, 0xce, 0xb9, 0xe7, 0xdc, 0x99, 0x3b, 0x85, 0x15, 0x1f, 0x87, 0xce, 0x31, 0x0a, 0x09,
	0xea, 0x3a, 0x36, 0xee, 0x46, 0x23, 0x33, 0x08, 0x71, 0x84, 0x95, 0x05, 0x3e, 0x6f, 0x3a, 0x36,
	0xd6, 0xd6, 0xf3, 0x61, 0x27, 0x76, 0x88, 0xfa, 0x78, 0x48, 0x10, 0x8b, 0xd6, 0xd6, 0xf2, 0xcb,
	0x41, 0x88, 0x03, 0x4c, 0x6c, 0x3f, 0x59, 0x5d, 0xcd, 0xaf, 0x1e, 0xe3, 0x08, 0x85, 0xc9, 0xd2,
	0x86, 0x8b, 0xb1, 0xeb, 0xa3, 0x2e, 0x1d, 0x1d, 0x0c, 0xbf, 0x75, 0x23, 0xef, 0x08, 0x91, 0xc8,
	0x3e, 0x0a, 0x92, 0x80, 0x65, 0x17, 0xbb, 0x98, 0x7e, 0x76, 0xe3, 0x2f, 0x36, 0x6b, 0x38, 0xa0,
	0xec, 0x11, 0xf7, 0x75, 0x88, 0xec, 0x08, 0x7d, 0x4c, 0x73, 0x51, 0x54, 0x98, 0x3f, 0x8c, 0xa7,
	0x70, 0xa8, 0x4a, 0xba, 0xd4, 0x69, 0x58, 0xe9, 0x50, 0x59, 0x81, 0x39, 0xca, 0x4a, 0xd4, 0x9a,
	0x2e, 0x77, 0xea, 0x56, 0x32, 0x52, 0xd6, 0xa0, 0x11, 0xf5, 0x43, 0x44, 0xfa, 0xd8, 0x77, 0x54,
	0x59, 0x97, 0x3a, 0x75, 0xeb, 0x6a, 0xc2, 0x78, 0x0c, 0xda, 0x38, 0x8b, 0x85, 0x48, 0x80, 0x07,
	0x04, 0x29, 0x2d, 0xa8, 0x79, 0x0e, 0x25, 0xaa, 0x5b, 0x35, 0xcf, 0x31, 0x2c, 0x58, 0xdc, 0x23,
	0x6e, 0xcf, 0x73, 0x07, 0xd3, 0x64, 0xb4, 0x0c, 0xb3, 0x34, 0x07, 0xb5, 0x46, 0x01, 0xd8, 0x20,
	0xc1, 0x94, 0x39, 0xe6, 0x0f, 0x09, 0x54, 0x11, 0x94, 0x27, 0xf0, 0x15, 0x6e, 0x13, 0xcf, 0x1d,
	0x20, 0xe7, 0x03, 0x93, 0x26, 0xe9, 0x72, 0xa7, 0xb9, 0xf5, 0xcc, 0xcc, 0x55, 0xce, 0x2c, 0xdb,
	0x6e, 0xf6, 0x32, 0x7b, 0x77, 0x07, 0x51, 0x78, 0x6a, 0xe5, 0xe0, 0xb4, 0x97, 0xb0, 0x34, 0x16,
	0xa2, 0x2c, 0x82, 0xfc, 0x1d, 0x9d, 0x26, 0xaa, 0xe3, 0x4f, 0x2a, 0xc4, 0xf6, 0x87, 0x88, 0x0a,
	0xb9, 0x65, 0xb1, 0xc1, 0x76, 0xed, 0xa9, 0x64, 0x44, 0xb4, 0x48, 0xef, 0x03, 0x67, 0xca, 0x22,
	0x31, 0xf1, 0xb5, 0x54, 0x7c, 0xa6, 0x68, 0x72, 0x79, 0xd1, 0xea, 0x62, 0xd1, 0xd6, 0x68, 0xd1,
	0x04, 0xd6, 0x54, 0xb4, 0xf1, 0x82, 0xe6, 0xf4, 0x06, 0xf9, 0xe8, 0x46, 0x39, 0x25, 0xe8, 0xc2,
	0x7e, 0x8e, 0xfe, 0x53, 0x82, 0x25, 0x7e, 0x62, 0xde, 0x26, 0x97, 0xa0, 0xfa, 0x10, 0x44, 0x5e,
	0xe4, 0x33, 0xef, 0x1a, 0x16, 0x1b, 0x28, 0x3a, 0x34, 0x1d, 0x44, 0x0e, 0x43, 0x2f, 0x88, 0x3c,
	0x3c, 0xa0, 0xa7, 0xa1, 0x61, 0x65, 0xa7, 0x94, 0x57, 0x00, 0x68, 0x14, 0x78, 0xa1, 0x4d, 0x03,
	0x62, 0x0b, 0x9a, 0x5b, 0x9a, 0xc9, 0xae, 0x92, 0x99, 0x5e, 0x25, 0xf3, 0x5d, 0x7a, 0x95, 0x76,
	0xea, 0x67, 0x7f, 0x36, 0x24, 0x2b, 0xb3, 0x27, 0xf6, 0x90, 0xdf, 0x61, 0x75, 0x96, 0x79, 0xc8,
	0x27, 0x8c, 0x47, 0xb0, 0x3a, 0x26, 0xa3, 0xf4, 0xdc, 0xef, 0x53, 0xcd, 0xcc, 0xf0, 0x29, 0x34,
	0x8b, 0x55, 0x16, 0xd4, 0xd6, 0xc7, 0xd4, 0x1a, 0xf7, 0x68, 0x36, 0x79, 0x02, 0x6e, 0xf9, 0x73,
	0xca, 0xce, 0x0a, 0x72, 0x7d, 0xf6, 0x04, 0x3b, 0xbf, 0x5d, 0x38, 0x2c, 0xbb, 0x23, 0x74, 0x38,
	0xbc, 0x11, 0x38, 0x3b, 0x2c, 0xc2, 0x7e, 0x8e, 0xbe, 0x03, 0x2d, 0x6e, 0x32, 0xbd, 0x62, 0xd5,
	0xfd, 0xeb, 0x04, 0x79, 0x6e, 0x3f, 0x4a, 0x7a, 0x43, 0x32, 0x32, 0x3a, 0xb0, 0x92, 0xc7, 0xa8,
	0xe8, 0x4e, 0x2d, 0x6e, 0xe2, 0x24, 0xb6, 0x82, 0x8b, 0x58, 0xc8, 0xae, 0x52, 0xf6, 0x0c, 0x26,
	0xd7, 0xb6, 0x4d, 0xd9, 0x98, 0xad, 0xd7, 0x64, 0x4b, 0x50, 0x33, 0x7b, 0x53, 0xd4, 0xad, 0x7f,
	0xf3, 0x20, 0xef, 0x11, 0x57, 0xe9, 0x41, 0x33, 0x6b, 0xdb, 0xfa, 0x78, 0xc7, 0xcb, 0x2c, 0x6b,
	0xf7, 0x2b, 0x97, 0xb9, 0x61, 0x3d, 0x68, 0x66, 0xdd, 0x29, 0x00, 0xcd, 0x2c, 0x17, 0x81, 0x16,
	0xf8, 0x10, 0x83, 0x66, 0x4d, 0x28, 0x00, 0xcd, 0x2c, 0x17, 0x81, 0x16, 0xd8, 0xa0, 0xec, 0xc3,
	0x1d, 0xf1, 0xe5, 0xdb, 0x2c, 0xd3, 0xc8, 0x43, 0xb4, 0x87, 0x13, 0x43, 0x38, 0xc1, 0x27, 0x58,
	0xc8, 0x3f, 0x63, 0x1b, 0x13, 0xde, 0x14, 0xed, 0xc1, 0x94, 0x8f, 0x4e, 0x9c, 0xbb, 0xf8, 0x20,
	0x6c, 0x96, 0x59, 0x59, 0x99, 0x7b, 0x49, 0x83, 0x8f, 0x09, 0xc4, 0xee, 0xbe, 0x59, 0x66, 0x6b,
	0x25, 0x41, 0x49, 0x8f, 0x57, 0xbe, 0x40, 0x4b, 0xe8, 0xef, 0x7a, 0x99, 0xb3, 0x69, 0x84, 0xd6,
	0x99, 0x14, 0x91, 0x45, 0x17, 0x3a, 0xa9, 0x5e, 0xa6, 0xbd, 0x0a, 0xbd, 0xb8, 0x59, 0xc6, 0xe8,
	0x42, 0xa7, 0xd4, 0xcb, 0x84, 0x57, 0xa1, 0x17, 0xb7, 0xcb, 0xd8, 0x7a, 0xb1, 0x57, 0x16, 0x58,
	0x2f, 0x84, 0x14, 0x59, 0x5f, 0xd2, 0x31, 0x77, 0xba, 0xbf, 0x2e, 0xda, 0xd2, 0xf9, 0x45, 0x5b,
	0xfa, 0x7b, 0xd1, 0x96, 0xce, 0x2e, 0xdb, 0x33, 0xe7, 0x97, 0xed, 0x99, 0xdf, 0x97, 0xed, 0x99,
	0xcf, 0x77, 0xaf, 0xfe, 0x30, 0x47, 0xec, 0x3f, 0xf6, 0x34, 0x40, 0xe4, 0x60, 0x8e, 0xbe, 0x85,
	0x4f, 0xfe, 0x07, 0x00, 0x00, 0xff, 0xff, 0xb4, 0x4f, 0xb8, 0x72, 0xe5, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// CreateWarehouse defines a rpc to create a voter.
	CreateVoter(ctx context.Context, in *MsgCreateVoter, opts ...grpc.CallOption) (*MsgCreateVoterResponse, error)
	// UpdateVoter defines a rpc to update a voter.
	UpdateVoter(ctx context.Context, in *MsgUpdateVoter, opts ...grpc.CallOption) (*MsgUpdateVoterResponse, error)
	// DeleteVoter defines a rpc to delete a voter.
	DeleteVoter(ctx context.Context, in *MsgDeleteVoter, opts ...grpc.CallOption) (*MsgDeleteVoterResponse, error)
	// CreateWarehouse defines a rpc to create a warehouse.
	CreateWarehouse(ctx context.Context, in *MsgCreateWarehouse, opts ...grpc.CallOption) (*MsgCreateWarehouseResponse, error)
	// SignWarehouse defines a rpc to sign a warehouse by warehouse voter.
	SignWarehouse(ctx context.Context, in *MsgSignWarehouse, opts ...grpc.CallOption) (*MsgSignWarehouseResponse, error)
	// UpdateWarehouse defines a rpc to update a warehouse.
	// WONT BE IMPLEMENTED
	UpdateWarehouse(ctx context.Context, in *MsgUpdateWarehouse, opts ...grpc.CallOption) (*MsgUpdateWarehouseResponse, error)
	// DeleteWarehouse defines a rpc to delete a warehouse.
	// WONT BE IMPLEMENTED
	DeleteWarehouse(ctx context.Context, in *MsgDeleteWarehouse, opts ...grpc.CallOption) (*MsgDeleteWarehouseResponse, error)
	// CreateProposal defines a rpc to create a proposal.
	CreateProposal(ctx context.Context, in *MsgCreateProposal, opts ...grpc.CallOption) (*MsgCreateProposalResponse, error)
	// UpdateProposal defines a rpc to update a proposal before voting started.
	UpdateProposal(ctx context.Context, in *MsgUpdateProposal, opts ...grpc.CallOption) (*MsgUpdateProposalResponse, error)
	// DeleteProposal defines a rpc to delete a proposal.
	DeleteProposal(ctx context.Context, in *MsgDeleteProposal, opts ...grpc.CallOption) (*MsgDeleteProposalResponse, error)
	// ExecuteProposal defines a rpc to execute a proposal which is in status Success.
	ExecuteProposal(ctx context.Context, in *MsgExecuteProposal, opts ...grpc.CallOption) (*MsgExecuteProposalResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateVoter(ctx context.Context, in *MsgCreateVoter, opts ...grpc.CallOption) (*MsgCreateVoterResponse, error) {
	out := new(MsgCreateVoterResponse)
	err := c.cc.Invoke(ctx, "/lordverse.dao.Msg/CreateVoter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateVoter(ctx context.Context, in *MsgUpdateVoter, opts ...grpc.CallOption) (*MsgUpdateVoterResponse, error) {
	out := new(MsgUpdateVoterResponse)
	err := c.cc.Invoke(ctx, "/lordverse.dao.Msg/UpdateVoter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteVoter(ctx context.Context, in *MsgDeleteVoter, opts ...grpc.CallOption) (*MsgDeleteVoterResponse, error) {
	out := new(MsgDeleteVoterResponse)
	err := c.cc.Invoke(ctx, "/lordverse.dao.Msg/DeleteVoter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateWarehouse(ctx context.Context, in *MsgCreateWarehouse, opts ...grpc.CallOption) (*MsgCreateWarehouseResponse, error) {
	out := new(MsgCreateWarehouseResponse)
	err := c.cc.Invoke(ctx, "/lordverse.dao.Msg/CreateWarehouse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SignWarehouse(ctx context.Context, in *MsgSignWarehouse, opts ...grpc.CallOption) (*MsgSignWarehouseResponse, error) {
	out := new(MsgSignWarehouseResponse)
	err := c.cc.Invoke(ctx, "/lordverse.dao.Msg/SignWarehouse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateWarehouse(ctx context.Context, in *MsgUpdateWarehouse, opts ...grpc.CallOption) (*MsgUpdateWarehouseResponse, error) {
	out := new(MsgUpdateWarehouseResponse)
	err := c.cc.Invoke(ctx, "/lordverse.dao.Msg/UpdateWarehouse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteWarehouse(ctx context.Context, in *MsgDeleteWarehouse, opts ...grpc.CallOption) (*MsgDeleteWarehouseResponse, error) {
	out := new(MsgDeleteWarehouseResponse)
	err := c.cc.Invoke(ctx, "/lordverse.dao.Msg/DeleteWarehouse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateProposal(ctx context.Context, in *MsgCreateProposal, opts ...grpc.CallOption) (*MsgCreateProposalResponse, error) {
	out := new(MsgCreateProposalResponse)
	err := c.cc.Invoke(ctx, "/lordverse.dao.Msg/CreateProposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateProposal(ctx context.Context, in *MsgUpdateProposal, opts ...grpc.CallOption) (*MsgUpdateProposalResponse, error) {
	out := new(MsgUpdateProposalResponse)
	err := c.cc.Invoke(ctx, "/lordverse.dao.Msg/UpdateProposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteProposal(ctx context.Context, in *MsgDeleteProposal, opts ...grpc.CallOption) (*MsgDeleteProposalResponse, error) {
	out := new(MsgDeleteProposalResponse)
	err := c.cc.Invoke(ctx, "/lordverse.dao.Msg/DeleteProposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ExecuteProposal(ctx context.Context, in *MsgExecuteProposal, opts ...grpc.CallOption) (*MsgExecuteProposalResponse, error) {
	out := new(MsgExecuteProposalResponse)
	err := c.cc.Invoke(ctx, "/lordverse.dao.Msg/ExecuteProposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// CreateWarehouse defines a rpc to create a voter.
	CreateVoter(context.Context, *MsgCreateVoter) (*MsgCreateVoterResponse, error)
	// UpdateVoter defines a rpc to update a voter.
	UpdateVoter(context.Context, *MsgUpdateVoter) (*MsgUpdateVoterResponse, error)
	// DeleteVoter defines a rpc to delete a voter.
	DeleteVoter(context.Context, *MsgDeleteVoter) (*MsgDeleteVoterResponse, error)
	// CreateWarehouse defines a rpc to create a warehouse.
	CreateWarehouse(context.Context, *MsgCreateWarehouse) (*MsgCreateWarehouseResponse, error)
	// SignWarehouse defines a rpc to sign a warehouse by warehouse voter.
	SignWarehouse(context.Context, *MsgSignWarehouse) (*MsgSignWarehouseResponse, error)
	// UpdateWarehouse defines a rpc to update a warehouse.
	// WONT BE IMPLEMENTED
	UpdateWarehouse(context.Context, *MsgUpdateWarehouse) (*MsgUpdateWarehouseResponse, error)
	// DeleteWarehouse defines a rpc to delete a warehouse.
	// WONT BE IMPLEMENTED
	DeleteWarehouse(context.Context, *MsgDeleteWarehouse) (*MsgDeleteWarehouseResponse, error)
	// CreateProposal defines a rpc to create a proposal.
	CreateProposal(context.Context, *MsgCreateProposal) (*MsgCreateProposalResponse, error)
	// UpdateProposal defines a rpc to update a proposal before voting started.
	UpdateProposal(context.Context, *MsgUpdateProposal) (*MsgUpdateProposalResponse, error)
	// DeleteProposal defines a rpc to delete a proposal.
	DeleteProposal(context.Context, *MsgDeleteProposal) (*MsgDeleteProposalResponse, error)
	// ExecuteProposal defines a rpc to execute a proposal which is in status Success.
	ExecuteProposal(context.Context, *MsgExecuteProposal) (*MsgExecuteProposalResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateVoter(ctx context.Context, req *MsgCreateVoter) (*MsgCreateVoterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateVoter not implemented")
}
func (*UnimplementedMsgServer) UpdateVoter(ctx context.Context, req *MsgUpdateVoter) (*MsgUpdateVoterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateVoter not implemented")
}
func (*UnimplementedMsgServer) DeleteVoter(ctx context.Context, req *MsgDeleteVoter) (*MsgDeleteVoterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteVoter not implemented")
}
func (*UnimplementedMsgServer) CreateWarehouse(ctx context.Context, req *MsgCreateWarehouse) (*MsgCreateWarehouseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWarehouse not implemented")
}
func (*UnimplementedMsgServer) SignWarehouse(ctx context.Context, req *MsgSignWarehouse) (*MsgSignWarehouseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignWarehouse not implemented")
}
func (*UnimplementedMsgServer) UpdateWarehouse(ctx context.Context, req *MsgUpdateWarehouse) (*MsgUpdateWarehouseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateWarehouse not implemented")
}
func (*UnimplementedMsgServer) DeleteWarehouse(ctx context.Context, req *MsgDeleteWarehouse) (*MsgDeleteWarehouseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteWarehouse not implemented")
}
func (*UnimplementedMsgServer) CreateProposal(ctx context.Context, req *MsgCreateProposal) (*MsgCreateProposalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProposal not implemented")
}
func (*UnimplementedMsgServer) UpdateProposal(ctx context.Context, req *MsgUpdateProposal) (*MsgUpdateProposalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProposal not implemented")
}
func (*UnimplementedMsgServer) DeleteProposal(ctx context.Context, req *MsgDeleteProposal) (*MsgDeleteProposalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProposal not implemented")
}
func (*UnimplementedMsgServer) ExecuteProposal(ctx context.Context, req *MsgExecuteProposal) (*MsgExecuteProposalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecuteProposal not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateVoter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateVoter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateVoter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lordverse.dao.Msg/CreateVoter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateVoter(ctx, req.(*MsgCreateVoter))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateVoter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateVoter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateVoter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lordverse.dao.Msg/UpdateVoter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateVoter(ctx, req.(*MsgUpdateVoter))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteVoter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteVoter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteVoter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lordverse.dao.Msg/DeleteVoter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteVoter(ctx, req.(*MsgDeleteVoter))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateWarehouse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateWarehouse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateWarehouse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lordverse.dao.Msg/CreateWarehouse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateWarehouse(ctx, req.(*MsgCreateWarehouse))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SignWarehouse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSignWarehouse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SignWarehouse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lordverse.dao.Msg/SignWarehouse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SignWarehouse(ctx, req.(*MsgSignWarehouse))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateWarehouse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateWarehouse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateWarehouse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lordverse.dao.Msg/UpdateWarehouse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateWarehouse(ctx, req.(*MsgUpdateWarehouse))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteWarehouse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteWarehouse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteWarehouse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lordverse.dao.Msg/DeleteWarehouse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteWarehouse(ctx, req.(*MsgDeleteWarehouse))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateProposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateProposal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateProposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lordverse.dao.Msg/CreateProposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateProposal(ctx, req.(*MsgCreateProposal))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateProposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateProposal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateProposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lordverse.dao.Msg/UpdateProposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateProposal(ctx, req.(*MsgUpdateProposal))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteProposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteProposal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteProposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lordverse.dao.Msg/DeleteProposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteProposal(ctx, req.(*MsgDeleteProposal))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ExecuteProposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgExecuteProposal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ExecuteProposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lordverse.dao.Msg/ExecuteProposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ExecuteProposal(ctx, req.(*MsgExecuteProposal))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lordverse.dao.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateVoter",
			Handler:    _Msg_CreateVoter_Handler,
		},
		{
			MethodName: "UpdateVoter",
			Handler:    _Msg_UpdateVoter_Handler,
		},
		{
			MethodName: "DeleteVoter",
			Handler:    _Msg_DeleteVoter_Handler,
		},
		{
			MethodName: "CreateWarehouse",
			Handler:    _Msg_CreateWarehouse_Handler,
		},
		{
			MethodName: "SignWarehouse",
			Handler:    _Msg_SignWarehouse_Handler,
		},
		{
			MethodName: "UpdateWarehouse",
			Handler:    _Msg_UpdateWarehouse_Handler,
		},
		{
			MethodName: "DeleteWarehouse",
			Handler:    _Msg_DeleteWarehouse_Handler,
		},
		{
			MethodName: "CreateProposal",
			Handler:    _Msg_CreateProposal_Handler,
		},
		{
			MethodName: "UpdateProposal",
			Handler:    _Msg_UpdateProposal_Handler,
		},
		{
			MethodName: "DeleteProposal",
			Handler:    _Msg_DeleteProposal_Handler,
		},
		{
			MethodName: "ExecuteProposal",
			Handler:    _Msg_ExecuteProposal_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lordverse/dao/tx.proto",
}

func (m *MsgCreateWarehouse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateWarehouse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateWarehouse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Threshold != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Threshold))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Voters) > 0 {
		dAtA2 := make([]byte, len(m.Voters)*10)
		var j1 int
		for _, num := range m.Voters {
			for num >= 1<<7 {
				dAtA2[j1] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j1++
			}
			dAtA2[j1] = uint8(num)
			j1++
		}
		i -= j1
		copy(dAtA[i:], dAtA2[:j1])
		i = encodeVarintTx(dAtA, i, uint64(j1))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateWarehouseResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateWarehouseResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateWarehouseResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgSignWarehouse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSignWarehouse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSignWarehouse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x18
	}
	if m.Voter != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Voter))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSignWarehouseResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSignWarehouseResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSignWarehouseResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.SignedVoters) > 0 {
		for k := range m.SignedVoters {
			v := m.SignedVoters[k]
			baseI := i
			i--
			if v {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x10
			i = encodeVarintTx(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintTx(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateWarehouse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateWarehouse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateWarehouse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Threshold != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Threshold))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Voters) > 0 {
		dAtA4 := make([]byte, len(m.Voters)*10)
		var j3 int
		for _, num := range m.Voters {
			for num >= 1<<7 {
				dAtA4[j3] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j3++
			}
			dAtA4[j3] = uint8(num)
			j3++
		}
		i -= j3
		copy(dAtA[i:], dAtA4[:j3])
		i = encodeVarintTx(dAtA, i, uint64(j3))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateWarehouseResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateWarehouseResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateWarehouseResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteWarehouse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteWarehouse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteWarehouse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteWarehouseResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteWarehouseResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteWarehouseResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateProposal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateProposal) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateProposal) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Warehouse != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Warehouse))
		i--
		dAtA[i] = 0x28
	}
	if m.Expiration != nil {
		n5, err5 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(*m.Expiration, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.Expiration):])
		if err5 != nil {
			return 0, err5
		}
		i -= n5
		i = encodeVarintTx(dAtA, i, uint64(n5))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateProposalResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateProposalResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateProposalResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateProposal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateProposal) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateProposal) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x22
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateProposalResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateProposalResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateProposalResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteProposal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteProposal) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteProposal) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteProposalResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteProposalResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteProposalResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgExecuteProposal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgExecuteProposal) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgExecuteProposal) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgExecuteProposalResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgExecuteProposalResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgExecuteProposalResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateVoter) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateVoter) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateVoter) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Weight != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Weight))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateVoterResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateVoterResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateVoterResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateVoter) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateVoter) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateVoter) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Weight != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Weight))
		i--
		dAtA[i] = 0x18
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateVoterResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateVoterResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateVoterResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteVoter) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteVoter) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteVoter) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteVoterResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteVoterResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteVoterResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateWarehouse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Voters) > 0 {
		l = 0
		for _, e := range m.Voters {
			l += sovTx(uint64(e))
		}
		n += 1 + sovTx(uint64(l)) + l
	}
	if m.Threshold != 0 {
		n += 1 + sovTx(uint64(m.Threshold))
	}
	return n
}

func (m *MsgCreateWarehouseResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgSignWarehouse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Voter != 0 {
		n += 1 + sovTx(uint64(m.Voter))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgSignWarehouseResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.SignedVoters) > 0 {
		for k, v := range m.SignedVoters {
			_ = k
			_ = v
			mapEntrySize := 1 + sovTx(uint64(k)) + 1 + 1
			n += mapEntrySize + 1 + sovTx(uint64(mapEntrySize))
		}
	}
	return n
}

func (m *MsgUpdateWarehouse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	if len(m.Voters) > 0 {
		l = 0
		for _, e := range m.Voters {
			l += sovTx(uint64(e))
		}
		n += 1 + sovTx(uint64(l)) + l
	}
	if m.Threshold != 0 {
		n += 1 + sovTx(uint64(m.Threshold))
	}
	return n
}

func (m *MsgUpdateWarehouseResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteWarehouse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteWarehouseResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateProposal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Expiration != nil {
		l = github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.Expiration)
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Warehouse != 0 {
		n += 1 + sovTx(uint64(m.Warehouse))
	}
	return n
}

func (m *MsgCreateProposalResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateProposal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateProposalResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteProposal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteProposalResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgExecuteProposal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgExecuteProposalResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateVoter) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Weight != 0 {
		n += 1 + sovTx(uint64(m.Weight))
	}
	return n
}

func (m *MsgCreateVoterResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateVoter) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	if m.Weight != 0 {
		n += 1 + sovTx(uint64(m.Weight))
	}
	return n
}

func (m *MsgUpdateVoterResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteVoter) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteVoterResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateWarehouse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateWarehouse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateWarehouse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Voters = append(m.Voters, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthTx
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthTx
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Voters) == 0 {
					m.Voters = make([]uint64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowTx
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Voters = append(m.Voters, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Voters", wireType)
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Threshold", wireType)
			}
			m.Threshold = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Threshold |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateWarehouseResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateWarehouseResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateWarehouseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSignWarehouse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSignWarehouse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSignWarehouse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Voter", wireType)
			}
			m.Voter = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Voter |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSignWarehouseResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSignWarehouseResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSignWarehouseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SignedVoters", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SignedVoters == nil {
				m.SignedVoters = make(map[uint64]bool)
			}
			var mapkey uint64
			var mapvalue bool
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowTx
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					var mapvaluetemp int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowTx
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapvaluetemp |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					mapvalue = bool(mapvaluetemp != 0)
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipTx(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthTx
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.SignedVoters[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateWarehouse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateWarehouse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateWarehouse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Voters = append(m.Voters, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthTx
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthTx
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Voters) == 0 {
					m.Voters = make([]uint64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowTx
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Voters = append(m.Voters, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Voters", wireType)
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Threshold", wireType)
			}
			m.Threshold = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Threshold |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateWarehouseResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateWarehouseResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateWarehouseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteWarehouse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteWarehouse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteWarehouse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteWarehouseResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteWarehouseResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteWarehouseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateProposal) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateProposal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateProposal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Expiration", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Expiration == nil {
				m.Expiration = new(time.Time)
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(m.Expiration, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Warehouse", wireType)
			}
			m.Warehouse = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Warehouse |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateProposalResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateProposalResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateProposalResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateProposal) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateProposal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateProposal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateProposalResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateProposalResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateProposalResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteProposal) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteProposal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteProposal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteProposalResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteProposalResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteProposalResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgExecuteProposal) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgExecuteProposal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgExecuteProposal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgExecuteProposalResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgExecuteProposalResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgExecuteProposalResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateVoter) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateVoter: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateVoter: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Weight", wireType)
			}
			m.Weight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Weight |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateVoterResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateVoterResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateVoterResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateVoter) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateVoter: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateVoter: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Weight", wireType)
			}
			m.Weight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Weight |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateVoterResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateVoterResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateVoterResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteVoter) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteVoter: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteVoter: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteVoterResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteVoterResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteVoterResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
